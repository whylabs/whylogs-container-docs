{"openapi":"3.0.1","info":{"title":"whylogs container API","description":"Container that hosts the java version of whylogs behind a REST interface.","version":"1.0"},"paths":{"/logs":{"post":{"tags":["whylogs"],"summary":"Log Data","description":"Log a map of feature names and values or an array of data points","operationId":"track","parameters":[{"name":"X-API-Key","in":"header","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"\nPass the input in single entry format (a JSON object) or a multiple entry format.\n* Set `single` key if you're passing a single data point with multiple features\n* Set `multiple` key if you're passing multiple data at once. Here are the required fields:\n Dockerfile Makefile README.md build build-scripts build.gradle.kts gradle gradle.properties gradlew gradlew.bat publish_scripts scripts settings.gradle.kts src supervisord.conf `columns`: specify an `array` of features\n Dockerfile Makefile README.md build build-scripts build.gradle.kts gradle gradle.properties gradlew gradlew.bat publish_scripts scripts settings.gradle.kts src supervisord.conf `data`: array of actual data points\nExample:\n\n```json\n{\n \"datasetId\": \"demo-model\",\n \"timestamp\": 1648162494947,\n \"tags\": {\n \"tagKey\": \"tagValue\"\n },\n \"single\": {\n \"feature1\": \"test\",\n \"feature2\": 1,\n \"feature3\": 1.0,\n \"feature4\": true\n }\n}\n```\n\nPassing multiple data points. The data is compatible with Pandas JSON output:\n```\nimport pandas as pd\n\ncars = {'Brand': ['Honda Civic','Toyota Corolla','Ford Focus','Audi A4'],\n 'Price': [22000,25000,27000,35000]\n }\n\ndf = pd.DataFrame(cars, columns = ['Brand', 'Price'])\ndf.to_json(orient=\"split\")\n```\n\nHere is an example from the output above\n```json\n{\n \"datasetId\": \"demo-model\",\n \"timestamp\": 1648162494947,\n \"tags\": {\n \"tag1\": \"value1\"\n },\n \"multiple\": {\n \"columns\": [\n \"Brand\",\n \"Price\"\n ],\n \"data\": [\n [\n \"Honda Civic\",\n 22000\n ],\n [\n \"Toyota Corolla\",\n 25000\n ],\n [\n \"Ford Focus\",\n 27000\n ],\n [\n \"Audi A4\",\n 35000\n ]\n ]\n }\n}\n```\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unit"}}}},"responses":{"200":{"description":"OK"},"400":{"description":"Bad or invalid input body"}}}},"/writeProfiles":{"post":{"tags":["whylogs"],"summary":"Write Profiles","description":"Force the container to write out the pending profiles via whatever method it's configured for.","operationId":"writeProfiles","parameters":[{"name":"X-API-Key","in":"header","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WriteProfilesResponse"}}}},"500":{"description":"Something unexpected went wrong."}}}},"/logDebugInfo":{"post":{"tags":["whylogs"],"summary":"Log Debug Info","description":"Trigger debugging info to be logged.","operationId":"logDebugInfo","parameters":[{"name":"X-API-Key","in":"header","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"500":{"description":"Something unexpected went wrong."}}}}},"components":{"schemas":{"Unit":{"type":"object"},"WriteProfilesResponse":{"required":["profilePaths","profilesWritten"],"type":"object","properties":{"profilesWritten":{"type":"integer","description":"The amount of profiles that were written out.","format":"int32"},"profilePaths":{"type":"array","description":"The paths of the profiles that were written if they exist. Some writers may not write profiles to anyplace that can be described as a path.","items":{"type":"string","description":"The paths of the profiles that were written if they exist. Some writers may not write profiles to anyplace that can be described as a path."}}},"description":"Response for writing out profiles."}}}}
